---
# - name: Warn if disks are going to be wiped
#   ansible.builtin.debug:
#     msg: |
#       ###################################################################
#       # ATTENTION PLEASE, POTENTIAL DATA LOSS AHEAD                     #
#       #                                                                 #
#       # You have configured the wipe_os and/or wipe_data variables.     #
#       # This command will wipe entire disks and you will lose all data  #
#       # on them.                                                        #
#       #                                                                 #
#       # PLEASE NOTE THAT SOME DATA WILL BE LOST EVEN IF ONLY WIPE_OS IS #
#       # DEFINED                                                         #
#       #                                                                 #
#       # If you are unsure about what you're doing, press Ctrl+C now to  #
#       # stop the process                                                #
#       ###################################################################
#   when: hostvars[item][wipe_os] is defined and hostvars[item][wipe_os] or
#         hostvars[item][wipe_data] is defined and hostvars[item][wipe_data]
#   loop: "{{ groups['all'] }}"

- name: Copy iPXE boot image to container's data directory
  ansible.builtin.copy:
    src: "{{ homelab_data_path }}/{{ netboot_data_path }}/ipxe/src/bin-x86_64-efi/ipxe.efi"
    dest: "{{ homelab_data_path }}/{{ netboot_data_path }}/kickstart/"
    mode: "0664"

- name: Copy iPXE boot configuration for CoreOS servers
  ansible.builtin.template:
    src: boot_install_coreos.ipxe.j2
    dest: "{{ homelab_data_path }}/{{ netboot_data_path }}/kickstart/{{ hostvars[item]['mac'] }}.ipxe"
    mode: "0644"
  loop: "{{ groups['kubernetes'] }}"

- name: Copy iPXE boot configuration for FreeIPA servers
  ansible.builtin.template:
    src: "boot_install_rocky.ipxe.j2"
    dest: "{{ homelab_data_path }}/{{ netboot_data_path }}/kickstart/{{ hostvars[item]['mac'] }}.ipxe"
    mode: "0644"
  loop: "{{ groups['freeipa'] }}"

- name: Create kickstart files for each FreeIPA machine
  ansible.builtin.template:
    src: "rocky.ks.j2"
    dest: "{{ homelab_data_path }}/{{ netboot_data_path }}/kickstart/{{ hostvars[item]['mac'] }}.ks"
    mode: "0644"
  loop: "{{ query('inventory_hostnames', 'freeipa') }}"

- name: Create ignition files for each CoreOS machine
  ansible.builtin.template:
    src: "coreos.btn.j2"
    dest: "{{ homelab_data_path }}/{{ netboot_data_path }}/kickstart/{{ hostvars[item]['mac'] }}.btn"
    mode: "0644"
  loop: "{{ query('inventory_hostnames', 'kubernetes') }}"

- name: Create ignition installation configuration for each CoreOS machine
  ansible.builtin.template:
    src: "install.btn.j2"
    dest: "{{ homelab_data_path }}/{{ netboot_data_path }}/kickstart/{{ hostvars[item]['mac'] }}_install.btn"
    mode: "0644"
  loop: "{{ query('inventory_hostnames', 'kubernetes') }}"

- name: Convert all Butane files to ignition
  ansible.builtin.command:
    cmd: butane {{ item }} -o {{ item | splitext | first }}.ign
  with_fileglob:
    - "{{ homelab_data_path }}/{{ netboot_data_path }}/kickstart/*.btn"
  register: butane_output
  changed_when: butane_output.rc != 0

- name: Set podman SELinux permissions of homelab directory
  ansible.builtin.command:
    cmd: 'podman unshare chown -R 998:996 "{{ item }}"'
  register: pod_unshare_init
  changed_when: pod_unshare_init.rc != 0
  with_items:
    - "{{ homelab_data_path }}/{{ netboot_data_path }}/kickstart"
    - "{{ homelab_data_path }}/{{ netboot_data_path }}/docker_dnsmasq/nginx.conf"

- name: Open DHCP, TFTP and HTTP ports
  ansible.posix.firewalld:
    service: "{{ item }}"
    state: enabled
  with_items:
    - dhcp
    - tftp
    - http

- name: Open port 8000
  ansible.posix.firewalld:
    port: "8000/tcp"
    state: enabled

- name: Allow any user to bind on DHCP ports
  ansible.posix.sysctl:
    name: net.ipv4.ip_unprivileged_port_start
    value: 67
    state: present
    reload: true
  become: true
