- name: Check if TSIG key configuration file already exists
  ansible.builtin.lineinfile:
    path: /etc/named/ipa-ext.conf
    line: 'key "k3s" {'
  check_mode: true
  register: check_tsig_conf_file
  delegate_to: "{{ groups['freeipa'][0] }}"
  become: true

- name: TSIG configuration does not exist, creating it
  when: check_tsig_conf_file.changed
  delegate_to: "{{ groups['freeipa'][0] }}"
  notify: Restart named
  become: true
  block:
    - name: Generate TSIG key to allow external-dns to manipulate FreeIPA zones
      ansible.builtin.command:
        cmd: "tsig-keygen -a HMAC-SHA512 k3s"
      register: dnssec_keygen_out
      changed_when: dnssec_keygen_out.rc != 0

    - name: Add key to named configuration
      ansible.builtin.blockinfile:
        path: /etc/named/ipa-ext.conf
        block: "{{ dnssec_keygen_out.stdout }}"
        mode: "0640"

- name: Ensure dynamic update is enabled for the FreeIPA zone
  freeipa.ansible_freeipa.ipadnszone:
    ipaadmin_password: "{{ lookup('ansible.builtin.password', homelab_data_path + '/' + 'passwords' + '/' + 'ipaadmin_password', length=15) }}"
    state: present
    zone_name: "{{ k3s_zone }}"
    dynamicupdate: true
    update_policy: |-
      grant {{ ipaserver_realm }} krb5-self * A; grant {{ ipaserver_realm }} krb5-self * AAAA; grant {{ ipaserver_realm }} krb5-self * SSHFP;
      grant k3s subdomain {{ k3s_zone }} ANY;
  delegate_to: "{{ groups['freeipa'][0] }}"
