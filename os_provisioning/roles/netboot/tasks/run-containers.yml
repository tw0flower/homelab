---
- name: Delete containers if they already exists, otherwise they won't get recreated
  containers.podman.podman_container:
    name: "{{ item }}"
    state: absent
  with_items:
    - homelab_tftp
    - homelab_http
    - homelab_dynamic_ipxe

- name: Start HTTP container
  containers.podman.podman_container:
    name: homelab_http
    image: docker.io/nginx
    cap_add:
      - NET_ADMIN
      - NET_RAW
    volumes:
      - '{{ homelab_data_path }}/{{ netboot_data_path }}/kickstart:/var/www/html:z'
      - '{{ homelab_data_path }}/{{ netboot_data_path }}/docker_dnsmasq/nginx.conf:/etc/nginx/conf.d/default.conf:z'
    network: host
    recreate: true
    force_restart: true
    state: started

- name: Start TFTP container
  containers.podman.podman_container:
    name: homelab_tftp
    image: localhost/tftp
    cap_add:
      - NET_ADMIN
      - NET_RAW
    volumes:
      - '{{ homelab_data_path }}/{{ netboot_data_path }}/kickstart:/var/lib/tftpboot:z'
    network: host
    recreate: true
    force_restart: true
    state: started

- name: Start dynamic iPXE container
  containers.podman.podman_container:
    name: homelab_dynamic_ipxe
    volumes:
      - '{{ homelab_data_path }}/{{ netboot_data_path }}/dynamic_ipxe/config.py:/dynamic_ipxe/config.py:Z'
      - '{{ homelab_data_path }}/{{ netboot_data_path }}/dynamic_ipxe/boot_config:/dynamic_ipxe/boot_config:Z'
    image: localhost/dynamic_ipxe
    env:
      DYN_IPXE_CONFIG_MODULE: homelab_dynamic_ipxe_config
    cap_add:
      - NET_ADMIN
      - NET_RAW
    network: host
    ports:
      - 8000:8000
    recreate: true
    force_restart: true
    state: started
